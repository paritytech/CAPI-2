name: CI

on:
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: actions/cache@v3
        with:
          path: .turbo
          key: ${{ runner.os }}-${{ matrix.node-version }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-turbo-
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - name: Install deps
        run: pnpm install
      - name: Build
        run: pnpm turbo build --cache-dir=.turbo
      - name: Lint
        run: pnpm lint
      - name: Test
        run: pnpm test
      - name: Run Integration Tests
        run: pnpm test:ci
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: [utils, substrate-bindings, json-rpc/json-rpc-provider]
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          diff-search: true
          file-name: ./packages/${{ matrix.value }}/package.json
      - uses: actions/cache@v3
        if: steps.check.outputs.changed == 'true'
        with:
          path: .turbo
          key: ${{ runner.os }}-20.x-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-20.x-turbo-
      - uses: pnpm/action-setup@v2
        if: steps.check.outputs.changed == 'true'
        with:
          version: 8
      - name: Setup Node.js 20.x
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: Install deps
        if: steps.check.outputs.changed == 'true'
        run: pnpm install
      - name: Build
        if: steps.check.outputs.changed == 'true'
        run: pnpm turbo build --cache-dir=.turbo
      - name: Publish
        if: steps.check.outputs.changed == 'true'
        working-directory: packages/${{ matrix.value }}
        run: |
          echo "npm publish --tag latest"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_AUTOMATION_TOKEN }}
